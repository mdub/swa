{"id":"swa-1","title":"Add CloudTrail support with \"swa cloudtrail query\" command","description":"Implement CloudTrail support in swa to enable querying CloudTrail events. Initial implementation should support \"swa cloudtrail query\" to return the most recent 50 CloudTrail entries. Future enhancements will add filtering and ordering options.","design":"Follow the existing swa architecture patterns:\n\n1. Add aws-sdk-cloudtrail dependency to swa.gemspec\n2. Create lib/swa/cloud_trail/ directory for resource models\n3. Create lib/swa/cloud_trail/event.rb to wrap CloudTrail event records\n4. Create lib/swa/cli/cloud_trail_command.rb following pattern of other service commands\n5. Implement \"query\" subcommand using CollectionBehaviour mixin\n6. Use CloudTrail LookupEvents API to fetch recent events (default limit: 50)\n7. Implement summary() method for one-line event display\n8. Support standard data output (YAML/JSON with JMESPath)\n\nThe command structure should be:\n- swa cloudtrail query summary (default)\n- swa cloudtrail query data [jmespath-query]","acceptance_criteria":"- Running \"swa cloudtrail query\" returns the 50 most recent CloudTrail events\n- Output defaults to summary format (one line per event)\n- \"swa cloudtrail query data\" returns full event data in YAML\n- \"swa cloudtrail query data --json\" returns full event data in JSON\n- JMESPath queries work with the data output\n- Event summary shows key fields (timestamp, event name, username, source IP)\n- Follows existing swa architectural patterns and code style","notes":"Implemented and tested CloudTrail support. All acceptance criteria met:\n- Returns 50 most recent events by default\n- --limit option works correctly (fixed in commit 3012838)\n- Summary format shows timestamp, event name, username, event source\n- Data output in YAML/JSON works\n- JMESPath queries work\n- Follows swa architectural patterns","status":"in_progress","priority":2,"issue_type":"feature","assignee":"mikewilliams","created_at":"2025-10-25T16:03:46.156464+11:00","updated_at":"2025-10-25T16:20:12.043516+11:00"}
{"id":"swa-2","title":"Add filtering options for cloudtrail events","description":"Add command-line options to filter CloudTrail events by common criteria like event source and event name. This will make it easier to narrow down results without piping through grep/jq.","design":"Add filtering options to the cloudtrail events command:\n\nOptions to add:\n- --source SERVICE - filter by event source (e.g., kms.amazonaws.com, sts.amazonaws.com)\n- --name EVENT_NAME - filter by event name (e.g., Decrypt, AssumeRole)\n\nImplementation approach:\n1. Add option declarations in cloudtrail_command.rb\n2. Apply filters to the collection before .take(max)\n3. Use lazy evaluation to maintain efficiency\n4. Consider using AWS CloudTrail LookupEvents API filters if available (check API docs)\n   - If API supports filtering, pass to lookup_events\n   - Otherwise, filter in Ruby after fetching\n\nFuture enhancements could add:\n- --user USERNAME - filter by username\n- --since/--until - time range filtering\n- --resource - filter by resource type/ARN","acceptance_criteria":"- Can filter by event source: swa cloudtrail events --source kms.amazonaws.com\n- Can filter by event name: swa cloudtrail events --name Decrypt\n- Can combine filters: swa cloudtrail events --source sts.amazonaws.com --name AssumeRole\n- Filters work with all output modes (summary, data)\n- Filters work correctly with --max option\n- Performance is reasonable (uses API filters if available)","notes":"Implemented filtering options for CloudTrail events:\n- Added --source option to filter by event source (e.g. kms.amazonaws.com)\n- Added --name option to filter by event name (e.g. Decrypt)\n- Handles CloudTrail API limitation (only one lookup_attribute at a time) by using most selective filter at API level and applying second filter in Ruby\n- All tests passing with various filter combinations\n- Works with all output modes (summary, data)","status":"in_progress","priority":2,"issue_type":"feature","assignee":"mikewilliams","created_at":"2025-10-25T16:55:05.923645+11:00","updated_at":"2025-10-25T22:12:59.271743+11:00"}
{"id":"swa-3","title":"Add filtering by caller for cloudtrail events","description":"Add ability to filter CloudTrail events by the identity/caller that made the API call. This is useful for tracking down specific users, roles, or service accounts.","design":"Add --user/--caller option to filter CloudTrail events by the identity making the request.\n\nThe CloudTrail event structure has multiple identity-related fields:\n- username (from envelope) - simplified identity string\n- userIdentity.principalId (in CloudTrail event)\n- userIdentity.arn (in CloudTrail event) \n- userIdentity.userName (in CloudTrail event)\n\nImplementation approach:\n1. Add --user USERNAME option (or --caller)\n2. Consider matching against multiple fields for flexibility:\n   - Match against username field (envelope)\n   - Could also match against userIdentity.principalId or userName\n3. Support partial matching (substring) for convenience\n4. Investigate if CloudTrail LookupEvents API supports username filtering\n\nExamples:\n- swa cloudtrail events --user snowflake\n- swa cloudtrail events --user kafkatopicarchive\n- swa cloudtrail events --user system:serviceaccount\n\nConsider if this should be combined with swa-2 (general filtering) or kept separate.","acceptance_criteria":"- Can filter by caller/user: swa cloudtrail events --user USERNAME\n- Partial matching works (e.g., --user kafka matches kafkatopicarchive-*)\n- Works with other filters and --max option\n- Works with all output modes (summary, data)\n- Helpful error message if no events match the filter","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-25T16:55:56.999516+11:00","updated_at":"2025-10-25T16:55:56.999516+11:00"}
